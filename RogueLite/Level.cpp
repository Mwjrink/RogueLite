#include "Level.h"

#include "World.h"

namespace level
{
    Renderable r;

    unsigned int base_map_width  = 30;
    unsigned int base_map_height = 17;

#define w 152
    unsigned int* base_map = new unsigned int[30 * 17]{
        w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,
        w,   w,   w,   w,   w,   w,   w,   w,   321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
        321, 321, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, w,   w,   321, 321, 321, 321, 321, 321, 321, 321,
        321, 321, 321, 321, 321, 321, 321, 321, 321, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, w,   w,   321,
        321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 186, 186, 186, 186, 186, 186, 186,
        186, 186, 186, 186, w,   w,   321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
        249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, w,   w,   321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
        321, 321, 321, 321, 321, 321, 321, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, w,   w,   321, 321, 321,
        321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 249, 249, 249, 249, 249, 249, 249, 249, 249,
        249, 249, w,   w,   321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 186, 186,
        186, 186, 186, 186, 186, 186, 186, 186, 186, w,   w,   321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
        321, 321, 321, 321, 321, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, w,   w,   321, 321, 321, 321, 321,
        321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
        w,   w,   321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 249, 249, 249, 249,
        249, 249, 249, 249, 249, 249, 249, w,   w,   321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
        321, 321, 321, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, w,   w,   321, 321, 321, 321, 321, 321, 321,
        321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, w,   w,
        321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 249, 249, 249, 249, 249, 249,
        249, 249, 249, 249, 249, w,   w,   321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
        321, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, 186, w,   w,   321, 321, 321, 321, 321, 321, 321, 321, 321,
        321, 321, 321, 321, 321, 321, 321, 321, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, 249, w,   w,   w,   w,
        w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,   w,
        w,   w,   w,   w};

    unsigned int* collision_map = new unsigned int[16 * 9]{
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  //..................................................
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  //..................................................
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  //..................................................
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  //..................................................
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  //..................................................
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  //..................................................
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  //..................................................
        1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,  //..................................................
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  //..................................................
    };

    void Init(Level* target)
    {
        r = Renderable();
        r.tile_sheet =
            Create_TileSheet(gltexture::AllocateTextureForLoading("Resources/pokemonground.png"), glm::ivec2(32, 32));
        r.position = glm::vec2(0.0f, 0.0f);
        r.size     = glm::vec2(world::width / target->width, world::height / target->height);
    }

    void RenderLevel(Level* render_target)
    {
        for (unsigned int y = 0; y < render_target->height; y++)
            for (unsigned int x = 0; x < render_target->width; x++)
            {
                r.position.x = (float)x * r.size.x * render_target->width / (float)render_target->width;
                r.position.y = (float)y * r.size.y * render_target->height / (float)render_target->height;

                r.current_tile_index = render_target->map[x + y * render_target->width];

                graphics::DrawRenderable(r, graphics::shaderProgram);
            }
    }
}  // namespace level
